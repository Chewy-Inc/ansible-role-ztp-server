#- name: disable selinux
#  selinux: state=disabled
#  become: True
#  when: disable_selinux
#
#- name: install epel
#  yum: name=epel-release state=installed
#  become: True

- name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

- name: install ztp packages
  package:
    name: "{{ item }}"
    state: installed
  with_items: "{{ ztp_packages }}"
  become: True

- name: configure ztp dhcpd.conf
  template: src=dhcpd.j2 dest=/etc/dhcp/dhcpd.conf backup=yes
  become: True

- name: configure tftp settings
  template: src=tftp.j2 dest=/etc/xinetd.d/tftp backup=yes
  become: True

- lineinfile:
    path: /etc/default/isc-dhcp-server
    regexp: "^INTERFACESv4="
    line: "INTERFACESv4=\"{{ ztp_dhcpd_interfaces }}\""

- name: Creates TFTP config directory
  file:
    path: "{{ ztp_config_root}}"
    state: directory

- name: create the config files
  template: src={{ client_item.config_template }} dest={{ ztp_config_root}}/{{ client_item.hostname }}.{{ client_item.domain }}
  with_items: "{{ ztp_clients | default([]) }}"
  loop_control:
    loop_var: client_item

- block:
  - name: allow TFTP through firewall
    firewalld:
      service: tftp
      immediate: true
      permanent: true
      state: enabled
    become: True

  - name: allow DHCP through firewall
    firewalld:
      service: dhcp
      immediate: true
      permanent: true
      state: enabled
    become: True
  when: ansible_os_family == 'Redhat'

- name: restart services
  service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  with_items: "{{ ztp_services }}"
  become: True
  when: ztp_restart_services | bool
...
